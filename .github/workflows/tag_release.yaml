name: Release build
on:
  push:
    tags:
      - '*'

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - name: Get tag name
        id: tag-name
        run: echo "release_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Update version in Makefile
        run: |
          sed -i "s/^VERSION ?= .*/VERSION ?= ${{ env.release_tag }}/" Makefile
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add Makefile
          git commit -m "Update version to ${{ env.release_tag }}"
          git push origin main
        continue-on-error: true
      - id: versions
        run: |
          make print-VERSION              >> "$GITHUB_ENV"
          make print-TAG VERSION=${{ env.release_tag }} >> "$GITHUB_ENV"
          make print-CODE_SERVER_BASE_TAG >> "$GITHUB_ENV"
          make print-GOLANG_VERSION       >> "$GITHUB_ENV"
          make print-NODE_VERSION         >> "$GITHUB_ENV"
          make print-PYTHON_VERSION       >> "$GITHUB_ENV"
          make print-DOCKER_VERSION       >> "$GITHUB_ENV"
          make print-KUBECTL_VERSION      >> "$GITHUB_ENV"
          make print-KUSTMIZE_VERSION     >> "$GITHUB_ENV"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          file: Dockerfile
          tags: |
            ghcr.io/cosmo-workspace/dev-code-server:${{ env.TAG }}
            ghcr.io/cosmo-workspace/dev-code-server:${{ env.VERSION }}
          build-args: |
            CODE_SERVER_BASE_TAG=${{ env.CODE_SERVER_BASE_TAG }}
            GOLANG_VERSION=${{ env.GOLANG_VERSION }}
            NODE_VERSION=${{ env.NODE_VERSION }}
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
            DOCKER_VERSION=${{ env.DOCKER_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
